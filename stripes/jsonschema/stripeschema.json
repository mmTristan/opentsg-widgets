{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Test Card Schema",
    "description": "The Schmea for the ramp section of the test card generator",
    "type": "object",
    "properties": {
        "grid": {
            "$ref": "#/$defs/gridschema",
            "description": "The coordiantes of the location to be added, a->p is the x axis, 0->9 are the allowed y axis parameters. Alternativley an alias can be used if already declared"
        },
        "type": {
            "type": "string",
            "enum": [
                "builtin.ramps"
            ],
            "description": "This to be labelled as \"builtin.ramps\", so that the json is correctly configured for open tpg"
        },
        "fillType": {
            "type": "string",
            "enum": [
                "truncate",
                "fill"
            ],
            "description": "The type of fill for when the ramp is an exact multiple of 4096"
        },
        "minimum": {
            "$ref": "#/$defs/colourvals"
        },
        "maximum": {
            "$ref": "#/$defs/colourvals"
        },
        "depth": {
            "enum": [
                4,
                8,
                10,
                12
            ],
            "description": "These are the available bit ranges that the colours can be described in, white, black and rampstart must be within the colour range for that bitdepth, the default value is 12."
        },
        "rampAngle": {
            "anyOf": [
                {
                    "$ref": "#/$defs/angles/radian1"
                },
                {
                    "$ref": "#/$defs/angles/radian2"
                },
                {
                    "$ref": "#/$defs/angles/degree"
                }
            ]
        },
        "text": {
            "$ref": "#/$defs/text"
        },
        "stripes": {
            "$ref": "#/$defs/stripes"
        }
    },
    "required": [
        "type",
        "grid"
    ],
    "additionalProperties": false,
    "$defs": {
        "colourvals": {
            "description": "the range for which a rgb value of colour is applicable",
            "type": "integer",
            "minimum": 0,
            "maximum": 4095
        },
        "colourReg": {
            "6hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{6}$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern #rrggbb in hexcode, the values can be 0-9 and a-f e.g. #c45ea3 is acceptable but #aga6ah is not."
            },
            "3hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{3}$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern #rgb in single hexcode, the values can be 0-9 and a-f e.g. #c53 is acceptable but #g6h is not."
            },
            "8hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{8}$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern #rrggbbaa in hexcode, the values can be 0-9 and a-f e.g. #c45ea3ff is acceptable but #aga6ahff is not."
            },
            "4hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{4}$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern #rgba in single hexcode, the values can be 0-9 and a-f e.g. #c53f is acceptable but #g6h is not."
            },
            "cssrgba": {
                "type": "string",
                "pattern": "^(rgba\\()\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\)$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern rgba(rval,gval,bval,aval), the values are between 0.255 e.g. rgb(240,220,4,255) is acceptable but rgb(240,-5,400,23) is not."
            },
            "cssrgb": {
                "type": "string",
                "pattern": "^(rgb\\()\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\)$",
                "description": "## Example\nThis is for the colour of the labels on the ramps. This follows the pattern rgb(rval,gval,bval), the values are between 0.255 e.g. rgb(240,220,4) is acceptable but rgb(240,-5,400) is not."
            },
			"cssrgb12": {
				"type": "string",
				"pattern":"^rgb12\\(([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5])\\)$"
			},
			"cssrgba12": {
				"type": "string",
				"pattern":"^rgba12\\(([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5])\\)$"
			}
        },
        "angles": {
            "radian1": {
                "type": "string",
                "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
                "pattern": "^π\\*(\\d){1,4}$",
                "description": "## Example\nThis is a multiplication of π up to 4 digits\n### Acceptable input\n- π*2\n- π*3332\n### Unacceptable input\n- π*0.5\n- π*12345"
            },
            "radian2": {
                "type": "string",
                "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
                "pattern": "^π\\*(\\d){1,4}/{1}(\\d){1,4}$",
                "description": "## Example\nThis is a multiplication of π up to 4 digits/4 digits \n### Acceptable input\n- π*1/22\n- π*7/3332\n### Unacceptable input\n- π*12345/3\n- π*0.5/3"
            },
            "degree": {
                "type": "number",
                "minimum": 0,
                "maximum": 360,
                "description": "## Degrees can be any number between 0 and 360"
            }
        },
        "colourinfo": {
            "description": "The available colors for the ramps to be assigned",
            "enum": [
                "red",
                "green",
                "blue",
                "black",
                "white",
                "gray",
                "grey"
            ]
        },
        "text": {
            "type": "object",
            "properties": {
                "textyPosition": {
                    "enum": [
                        "top",
                        "middle",
                        "bottom"
                    ],
                    "description": "These are the permitted y coordinates of the labels on the bars."
                },
                "textxPosition": {
                    "enum": [
                        "left",
                        "right",
                        "center"
                    ],
                    "description": "These are the permitted x coordinates of the labels on the bars."
                },
                "textHeight": {
                    "description": "the height of the label text, as a percentage of the stripe ",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                },
                "textColor": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/colourReg/6hex"
                        },
                        {
                            "$ref": "#/$defs/colourReg/3hex"
                        },
                        {
                            "$ref": "#/$defs/colourReg/4hex"
                        },
                        {
                            "$ref": "#/$defs/colourReg/8hex"
                        },
                        {
                            "$ref": "#/$defs/colourReg/cssrgb"
                        },
                        {
                            "$ref": "#/$defs/colourReg/cssrgba"
                        },
                        {
                            "$ref": "#/$defs/colourReg/cssrgb12"
                        },
                        {
                            "$ref": "#/$defs/colourReg/cssrgba12"
                        }
                    ],
                    "description": "The colour for the labels on the ramp."
                }
            },"additionalProperties": false
        },
        "stripes": {
            "type": "object",
            "properties": {
                "groupHeader": {
                    "type": "object",
                    "properties": {
                        "color": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 1,
                            "items": {
                                "$ref": "#/$defs/colourinfo"
                            },
                            "uniqueItems": true
                        },
                        "height": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4000,
                            "description": "This is the height of the individual ramps"
                        }
                    }
                },
                "interstripes": {
                    "type": "object",
                    "properties": {
                        "color": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/$defs/colourinfo"
                            },
                            "uniqueItems": true
                        },
                        "height": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4000,
                            "description": "This is the height of the individual ramps"
                        }
                    }
                },
                "ramps": {
                    "type": "object",
                    "properties": {
                        "fill": {
                            "enum": [
                                "constant",
                                "gradient"
                            ]
                        },
                        "bitdepth": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "enum": [
                                    4,
                                    8,
                                    10,
                                    12
                                ]
                            }
                        },
                        "labels": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "string"
                            }
                        },
                        "height": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4000,
                            "description": "This is the height of the individual ramps"
                        },
                        "rampGroups": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "color": {
                                        "$ref": "#/$defs/colourinfo"
                                    },
                                    "rampstart": {
                                        "$ref": "#/$defs/colourvals"
                                    },
                                    "direction": {
                                        "enum":[-1,1,0]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "gridschema": {
            "properties": {
                "location": {
                    "anyOf": [
						{
								"type": "string",
								"pattern": "^[a-pA-P]{1}[0-8]{1}$"
							
						},
						{
		
								"type": "string",
								"pattern": "^[\\w\\W]{1,30}$"
							
						}
					],
                    "description": "The location of the module to be added to the test card"
                },
                "alias": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "description": "The name to refer to the chosen grid location for the module, these are reset for each section in the array and are optional"
                }
            },
            "required": [
                "location"
            ],
            "additionalProperties": false
        }
    }
}